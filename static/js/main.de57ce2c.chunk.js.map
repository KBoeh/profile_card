{"version":3,"sources":["component/Toggle.js","component/Like.js","App.js","reportWebVitals.js","index.js"],"names":["Button","toggler","btntext","onClick","Likes","thumb","class","App","useState","toggle","setToggle","likes","setLikes","className","alt","Like","target","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAQeA,MANf,YAAuC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACvB,OACI,yBAAQC,QAASF,EAAjB,cAA4BC,MCIrBE,MANf,YAA2B,IAAVC,EAAS,EAATA,MACb,OACI,mBAAGF,QAASE,EAAOC,MAAM,sBC6ClBC,MA5Cf,WAEE,MAA4BC,mBAAS,+BAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAKA,OACE,qBAAKC,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,SAASC,IAAI,mBAE5B,wCAECL,EAED,gCACE,cAAC,EAAD,CAAQR,QApBG,WACjBS,EAAU,2BAmByBR,QAAS,SACtC,cAAC,EAAD,CAAQD,QAxBI,WAClBS,EAAU,+BAuB0BR,QAAS,cAGzC,sBAAKW,UAAU,QAAf,UACGF,EACD,cAACI,EAAD,CAAOV,MArBH,WACVO,EAASD,EAAQ,SAuBb,uBAAME,UAAU,OAAhB,UACE,mBAAGG,OAAO,SAASC,IAAI,aAAaC,KAAK,8CAAzC,SAAuF,mBAAGZ,MAAM,sBAChG,mBAAGU,OAAO,SAASC,IAAI,aAAaC,KAAK,2BAAzC,SAAoE,mBAAGZ,MAAM,6BC9BxEa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.de57ce2c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Button({ toggler, btntext }) {\r\n    return (\r\n        <button onClick={toggler}> {btntext}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nfunction Likes({ thumb }) {\r\n    return (\r\n        <i onClick={thumb} class=\"fas fa-thumbs-up\"></i>\r\n    );\r\n}\r\n\r\nexport default Likes;","import React, { useState } from \"react\"\nimport './App.css';\nimport Button from './component/Toggle';\nimport Likes from './component/Like';\n\nfunction App() {\n\n  const [toggle, setToggle] = useState('Press the buttons and icons');\n  const toggleTrack = () => {\n    setToggle('I am a Front-End Developer');\n  };\n  const toggleName = () => {\n    setToggle('Hello, my name is Karl');\n  };\n\n  const [likes, setLikes] = useState(0);\n  const add = () => {\n    setLikes(likes + 1);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <div className='container'>\n        <div className=\"proPic\" alt=\"Karl's profile\"></div>\n\n        <h1>Hello!</h1>\n\n        {toggle}\n\n        <div>\n          <Button toggler={toggleName} btntext={'Name'} />\n          <Button toggler={toggleTrack} btntext={'Skills'} />\n        </div>\n\n        <div className='count'>\n          {likes}\n          <Likes thumb={add} />\n        </div>\n\n        <foot className='foot'>\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/karl-boehringer\"><i class=\"fab fa-linkedin\"></i></a>\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/kboeh\"><i class=\"fab fa-github\"></i></a>\n        </foot>\n      </div>\n    </div >\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}